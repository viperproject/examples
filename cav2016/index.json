{
	"../vmcai2016/arraylist-quantified-permissions": {
		"name": "Array-List",
		"description": "Inserting into an array-list.",
		"category": "CAV'16"
	},

  "../quickselect/arrays_quickselect_rec" : {
    "name": "Quickselect",
    "description": "An encoding of the Quickselect algorithm over arrays.",
    "category": "CAV'16"
  },

  "../binary-search/binary-search-array" : {
    "name": "Binary Search",
    "description": "Binary search in a sorted array.",
    "category": "CAV'16"
  },

  "../graph-copy/graph-copy" : {
    "name": "Graph Copy",
    "description": "Duplicating a graph.",
    "category": "CAV'16"
  },

  "../graph-marking/graph-marking" : {
    "name": "Graph Marking",
    "description": "A graph marking algorithm (in the spirit of mark-and-sweep garbage collectors). Note that the example is supposed to yield 1 verification error (the encoding of a false reachability check).",
    "category": "CAV'16"
  },

  "../longest-common-prefix/longest-common-prefix.sil" : {
    "name": "Longest Common Prefix",
    "description": "Challenge from the VerifyThis Verification Competition 2012: finding the longest common prefix in an array.",
    "category": "CAV'16"
  },

  "../max_array/max-array-elimination" : {
    "name": "Array Max (by elimination)",
    "description": "Finding the maximum in an array by elimination (COST IC0701 Verification Competition 2011).",
    "category": "CAV'16"
  },

  "../max_array/max-array-standard" : {
    "name": "Array Max (straight-forward)",
    "description": "Finding the maximum in an array the straight-forward way.",
    "category": "CAV'16"
  },

  "parallel_array_remove" : {
    "name": "Array Max (straight-forward)",
    "description": "Running example from the paper: replace each occurrence of an element in an array segment by recursing over the two half-segments in parallel.",
    "category": "CAV'16"
  },

	"CAV'16" : {
		"description" : "This webpage contains the full examples referenced in the paper \"Automatic Verification of Iterated Separating Conjunctions using Symbolic Execution\" submitted to CAV 2016. The experimental data used for the paper can be found by following <a href=\"http://viper.ethz.ch/cav16_experimental_data.zip\">this link</a>. ",
		"isCategory" : true
	}
}
